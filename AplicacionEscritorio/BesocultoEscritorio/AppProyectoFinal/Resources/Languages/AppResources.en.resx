<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btActualizar" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="btAddFav" xml:space="preserve">
    <value>Add favourite</value>
  </data>
  <data name="btCancelar" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btEnviar" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="btLeer" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="btLogin" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="btNoLogin" xml:space="preserve">
    <value>Continue without login</value>
  </data>
  <data name="btOlvidaCon" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="btRegistrarse" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="busqueda" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="expOlvidaCon" xml:space="preserve">
    <value>Enter your registered email to receive instructions to reset your password</value>
  </data>
  <data name="expVerificar" xml:space="preserve">
    <value>Are you sure you want to send email verification instructions to your email?</value>
  </data>
  <data name="noVerificado" xml:space="preserve">
    <value>Not verified</value>
  </data>
  <data name="opAdmin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="opBiblioteca" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="opConfig" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="opInicio" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="opLeer" xml:space="preserve">
    <value>Read book</value>
  </data>
  <data name="opLibro" xml:space="preserve">
    <value>Book details</value>
  </data>
  <data name="opPerfil" xml:space="preserve">
    <value>User profile</value>
  </data>
  <data name="phCon" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="phCorreo" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="phRepCon" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="phUsuario" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="txtAutor" xml:space="preserve">
    <value>Author: </value>
  </data>
  <data name="txtBienvenida" xml:space="preserve">
    <value>Welcome to Besoculto</value>
  </data>
  <data name="txtCuenta" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="txtEditorial" xml:space="preserve">
    <value>Publisher: </value>
  </data>
  <data name="txtEstadoCuenta" xml:space="preserve">
    <value>Account status</value>
  </data>
  <data name="txtISBN" xml:space="preserve">
    <value>ISBN: </value>
  </data>
  <data name="txtLibrosFav" xml:space="preserve">
    <value>Favourite books</value>
  </data>
  <data name="txtLogin" xml:space="preserve">
    <value>Please login</value>
  </data>
  <data name="txtMiembro" xml:space="preserve">
    <value>Member</value>
  </data>
  <data name="txtOlvidaCon" xml:space="preserve">
    <value>Forgot your password?</value>
  </data>
  <data name="txtRegistrarse" xml:space="preserve">
    <value>Create new account</value>
  </data>
  <data name="txtSinopsis" xml:space="preserve">
    <value>Synopsis: </value>
  </data>
  <data name="txtTitulo" xml:space="preserve">
    <value>Title: </value>
  </data>
  <data name="txtVerificar" xml:space="preserve">
    <value>Verify email</value>
  </data>
  <data name="verificado" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="txtTema" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="txtIdioma" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="txtFontsize" xml:space="preserve">
    <value>Font size</value>
  </data>
  <data name="txtAceptar" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="txtDenegar" xml:space="preserve">
    <value>Deny</value>
  </data>
  <data name="expChangeRol" xml:space="preserve">
    <value>Do you want to give the author rank to the user?</value>
  </data>
  <data name="expChangeRol2" xml:space="preserve">
    <value>Do you want to give the author rank to user: </value>
  </data>
  <data name="txtRegistro" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="txtNombreUsuario" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="phEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="phPassword" xml:space="preserve">
    <value>Enter Password</value>
  </data>
  <data name="txtClaro" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="txtOscuro" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="txtPequena" xml:space="preserve">
    <value>Small</value>
  </data>
  <data name="txtMediana" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="txtGrande" xml:space="preserve">
    <value>Big</value>
  </data>
  <data name="txtEspanol" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="txtIngles" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="txtAjustes" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="txtUserAccount" xml:space="preserve">
    <value>User Account</value>
  </data>
  <data name="txtNoLibrosFav" xml:space="preserve">
    <value>There are no favorite books.</value>
  </data>
  <data name="txtNoTitulo" xml:space="preserve">
    <value>Unknown title</value>
  </data>
  <data name="txtNoDescripcion" xml:space="preserve">
    <value>No description</value>
  </data>
  <data name="txtNoFecha" xml:space="preserve">
    <value>Unknown date</value>
  </data>
  <data name="txtNoCategoria" xml:space="preserve">
    <value>Uncategorized</value>
  </data>
  <data name="txtCategoria" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="txtFecha" xml:space="preserve">
    <value>Date: </value>
  </data>
  <data name="txtTamano" xml:space="preserve">
    <value>Size: </value>
  </data>
  <data name="txtVisualizaciones" xml:space="preserve">
    <value>Views:</value>
  </data>
  <data name="txtPages" xml:space="preserve">
    <value>Pages:</value>
  </data>
  <data name="txtLectura" xml:space="preserve">
    <value>Reading</value>
  </data>
  <data name="txtAddComment" xml:space="preserve">
    <value>Add Comment</value>
  </data>
  <data name="txtFav" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="txtNoComent" xml:space="preserve">
    <value>No Comments available at this time.</value>
  </data>
  <data name="btAcercar" xml:space="preserve">
    <value>Zoom in</value>
  </data>
  <data name="btAlejar" xml:space="preserve">
    <value>Zoom out</value>
  </data>
  <data name="btRecCon" xml:space="preserve">
    <value>Recover Password</value>
  </data>
  <data name="phEmailrecover" xml:space="preserve">
    <value>Recovery email</value>
  </data>
  <data name="btAddNewBook" xml:space="preserve">
    <value>Add new book</value>
  </data>
  <data name="btSubir" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="txtCategoryBook" xml:space="preserve">
    <value>Book category</value>
  </data>
  <data name="phTitulo" xml:space="preserve">
    <value>Book title</value>
  </data>
  <data name="phDescripcion" xml:space="preserve">
    <value>Description of the book</value>
  </data>
  <data name="txtMostViewed" xml:space="preserve">
    <value>Most viewed</value>
  </data>
  <data name="txtNovedades" xml:space="preserve">
    <value>Latest</value>
  </data>
  <data name="txtPublicBooks" xml:space="preserve">
    <value>Public books</value>
  </data>
  <data name="txtSalir" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="txtPdfDispositivo" xml:space="preserve">
    <value>Read Pdf of the device</value>
  </data>
  <data name="txtNoLibros" xml:space="preserve">
    <value>There are no books available at this time.</value>
  </data>
  <data name="txtUsuario" xml:space="preserve">
    <value>User:</value>
  </data>
  <data name="txtUsuarios" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="txtAdministrador" xml:space="preserve">
    <value>Administrator:</value>
  </data>
  <data name="txtCategorias" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="txtLibros" xml:space="preserve">
    <value>Books</value>
  </data>
  <data name="txtNoUsers" xml:space="preserve">
    <value>There are no users available at this time.</value>
  </data>
  <data name="txtFilterpending" xml:space="preserve">
    <value>Filter by pending</value>
  </data>
  <data name="txtNoCategories" xml:space="preserve">
    <value>There are no categories available at this time.</value>
  </data>
  <data name="txtAddCategoria" xml:space="preserve">
    <value>Add category</value>
  </data>
  <data name="txtEditar" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="txtBorrar" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="txtNoUser" xml:space="preserve">
    <value>Unknown user</value>
  </data>
  <data name="txtNoAutor" xml:space="preserve">
    <value>Unknown author</value>
  </data>
  <data name="msnName" xml:space="preserve">
    <value>Enter your name</value>
  </data>
  <data name="msnEmail" xml:space="preserve">
    <value>Enter a valid email address</value>
  </data>
  <data name="msnPassword" xml:space="preserve">
    <value>Enter your password (6 characters minimum)</value>
  </data>
  <data name="msnCPassword" xml:space="preserve">
    <value>Confirm your password</value>
  </data>
  <data name="msnCheckPassword" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="msnCreateUser" xml:space="preserve">
    <value>Creating an account...</value>
  </data>
  <data name="msnErrorCreateUser" xml:space="preserve">
    <value>Failed to create account: </value>
  </data>
  <data name="msnSaveUser" xml:space="preserve">
    <value>Saving user information...</value>
  </data>
  <data name="msnSuccesUser" xml:space="preserve">
    <value>User successfully created</value>
  </data>
  <data name="msnFailSaveUser" xml:space="preserve">
    <value>Failed to save user: </value>
  </data>
  <data name="msnErrorLoadUser" xml:space="preserve">
    <value>Error loading user information: </value>
  </data>
  <data name="msnErrorImage" xml:space="preserve">
    <value>Could not select image.</value>
  </data>
  <data name="msnUpdatePerfil" xml:space="preserve">
    <value>Updating profile...</value>
  </data>
  <data name="msnSuccessUploadPerfil" xml:space="preserve">
    <value>Profile updated successfully</value>
  </data>
  <data name="msnFailUpdatePerfil" xml:space="preserve">
    <value>Failed to update profile: </value>
  </data>
  <data name="msnUploadImage" xml:space="preserve">
    <value>Uploading image...</value>
  </data>
  <data name="msnFailUploadImage" xml:space="preserve">
    <value>Failed to update image:</value>
  </data>
  <data name="msnVerified" xml:space="preserve">
    <value>You are already verified</value>
  </data>
  <data name="msnPendingVerified" xml:space="preserve">
    <value>Verification pending approval</value>
  </data>
  <data name="msnAskVerify" xml:space="preserve">
    <value>Are you sure you want to verify your user </value>
  </data>
  <data name="msnInfoVerify" xml:space="preserve">
    <value>Your account will be upgraded to a writer account after your request is processed.</value>
  </data>
  <data name="txtSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="msnSuccesRequest" xml:space="preserve">
    <value>Request created successfully</value>
  </data>
  <data name="msnErrorRequest" xml:space="preserve">
    <value>Request failed: </value>
  </data>
  <data name="msnErrorCreden" xml:space="preserve">
    <value>Error reading credentials: </value>
  </data>
  <data name="msnCheckUser" xml:space="preserve">
    <value>Checking user...</value>
  </data>
  <data name="msnNoUserFound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="msnFailUser" xml:space="preserve">
    <value>Failed to check user: </value>
  </data>
  <data name="msnLogin" xml:space="preserve">
    <value>Login...</value>
  </data>
  <data name="msnFailLog" xml:space="preserve">
    <value>Failed to login: </value>
  </data>
  <data name="txtFavAdd" xml:space="preserve">
    <value>Add to favorites</value>
  </data>
  <data name="txtFavDel" xml:space="preserve">
    <value>Remove from favorites</value>
  </data>
  <data name="msnCheckFav" xml:space="preserve">
    <value>Error when checking if it is a favorite: </value>
  </data>
  <data name="txtNoLogin" xml:space="preserve">
    <value>You are not logged in</value>
  </data>
  <data name="msnNewComment" xml:space="preserve">
    <value>New Comment</value>
  </data>
  <data name="txtComent" xml:space="preserve">
    <value>Enter a comment:</value>
  </data>
  <data name="phComent" xml:space="preserve">
    <value>Write your comment...</value>
  </data>
  <data name="msnAddComment" xml:space="preserve">
    <value>Adding comment</value>
  </data>
  <data name="msnComentAdded" xml:space="preserve">
    <value>Comment added</value>
  </data>
  <data name="msnFailComment" xml:space="preserve">
    <value>Failed to add comment: </value>
  </data>
  <data name="msnDelComment" xml:space="preserve">
    <value>Delete comment.</value>
  </data>
  <data name="msnConfirmDelComment" xml:space="preserve">
    <value>Are you sure you want to delete this message?</value>
  </data>
  <data name="txtEliminar" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="msnComentDeleted" xml:space="preserve">
    <value>Comment removed</value>
  </data>
  <data name="msnFailDelComent" xml:space="preserve">
    <value>Failed to delete comment: </value>
  </data>
  <data name="msnAddedFav" xml:space="preserve">
    <value>Added to favorites</value>
  </data>
  <data name="msnFailAddedFav" xml:space="preserve">
    <value>Failed to add to favorites: </value>
  </data>
  <data name="msnDeletedFav" xml:space="preserve">
    <value>Removed from favorites</value>
  </data>
  <data name="msnFailDeletedFav" xml:space="preserve">
    <value>Failed to remove from favorites: </value>
  </data>
  <data name="txtNoBook" xml:space="preserve">
    <value>The book does not exist in the database.</value>
  </data>
  <data name="msnErrorBook" xml:space="preserve">
    <value>Error loading the book: </value>
  </data>
  <data name="msnSendEmail" xml:space="preserve">
    <value>By sending mail to </value>
  </data>
  <data name="msnSendedEmail" xml:space="preserve">
    <value>Mail sent to: </value>
  </data>
  <data name="msnSendFail" xml:space="preserve">
    <value>Failed to send mail to </value>
  </data>
  <data name="txtEditBook" xml:space="preserve">
    <value>Edit book information</value>
  </data>
  <data name="txtSelected" xml:space="preserve">
    <value>File selected: </value>
  </data>
  <data name="txtAskTitulo" xml:space="preserve">
    <value>Enter title</value>
  </data>
  <data name="txtAskDesc" xml:space="preserve">
    <value>Enter description</value>
  </data>
  <data name="txtAskCat" xml:space="preserve">
    <value>Select a category</value>
  </data>
  <data name="txtAskpdf" xml:space="preserve">
    <value>Select a PDF</value>
  </data>
  <data name="txtUploading" xml:space="preserve">
    <value>Uploading the document...</value>
  </data>
  <data name="txtFailUpload" xml:space="preserve">
    <value>Failed to upload the document</value>
  </data>
  <data name="txtUploadInfo" xml:space="preserve">
    <value>Uploading document information... </value>
  </data>
  <data name="txtSuccesUpload" xml:space="preserve">
    <value>Information uploaded successfully, pending approval by an administrator</value>
  </data>
  <data name="txtFailUploadInfo" xml:space="preserve">
    <value>Failed to upload document information: </value>
  </data>
  <data name="txtSuccesUploadInfo" xml:space="preserve">
    <value>Information uploaded successfully</value>
  </data>
  <data name="txtFailUpdateInfo" xml:space="preserve">
    <value>Failed to update document information: </value>
  </data>
  <data name="txtRequestLog" xml:space="preserve">
    <value>Log in to access your profile</value>
  </data>
  <data name="txtNoFile" xml:space="preserve">
    <value>No file was selected.</value>
  </data>
  <data name="txtErrorPdf" xml:space="preserve">
    <value>Error reading PDF: </value>
  </data>
  <data name="txtDeleteUser" xml:space="preserve">
    <value>Delete User</value>
  </data>
  <data name="txtAskDeleteUser" xml:space="preserve">
    <value>Are you sure you want to delete the user: </value>
  </data>
  <data name="txtConfirmar" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="txtDeletingUser" xml:space="preserve">
    <value>Deleting user...</value>
  </data>
  <data name="txtUpdateRol" xml:space="preserve">
    <value>Updated user role</value>
  </data>
  <data name="txtLoadingBooks" xml:space="preserve">
    <value>Loading more books ...</value>
  </data>
  <data name="msnDeleteCategory" xml:space="preserve">
    <value>Delete Category</value>
  </data>
  <data name="msnAskDelete" xml:space="preserve">
    <value>Are you sure you want to delete the category </value>
  </data>
  <data name="msnDeletingCat" xml:space="preserve">
    <value>Deleting category...</value>
  </data>
  <data name="msnNewCategory" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="txtEnterCat" xml:space="preserve">
    <value>Enter the name of the category:</value>
  </data>
  <data name="phCategory" xml:space="preserve">
    <value>Ex: Science Fiction</value>
  </data>
  <data name="txtWarning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="txtAlreadyCat" xml:space="preserve">
    <value>Category already exists</value>
  </data>
  <data name="txtCatOk" xml:space="preserve">
    <value>Category successfully created</value>
  </data>
  <data name="txtFailCat" xml:space="preserve">
    <value>Category could not be created: </value>
  </data>
  <data name="msnDelBook" xml:space="preserve">
    <value>Delete Book</value>
  </data>
  <data name="msnAskDelBook" xml:space="preserve">
    <value>Are you sure you want to delete the book</value>
  </data>
  <data name="msnDeletingBook" xml:space="preserve">
    <value>Deleting book...</value>
  </data>
  <data name="msnDelAux" xml:space="preserve">
    <value>Deleting provisional record...</value>
  </data>
  <data name="txtAyuda" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="txtPageInit" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="txtAjustes2" xml:space="preserve">
    <value>User settings</value>
  </data>
  <data name="txtComentario" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="txtAddNewBook" xml:space="preserve">
    <value>Please fill out all the information below to request publication of your book</value>
  </data>
  <data name="expActionBook" xml:space="preserve">
    <value>What action do you want to take on the book: </value>
  </data>
  <data name="txtUploadBook" xml:space="preserve">
    <value>Upload book</value>
  </data>
  <data name="help1" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="help2" xml:space="preserve">
    <value>When you open the application, an initial screen is displayed from which you can either log in to access the full content or continue without logging in, which will limit access to certain content. If you have previously logged in, the application remembers this session, skipping the initial screen.</value>
  </data>
  <data name="help3" xml:space="preserve">
    <value>Login Page</value>
  </data>
  <data name="help4" xml:space="preserve">
    <value>A form is displayed with two fields: e-mail and password. The password has an icon that allows you to toggle between displaying it in clear text or hiding it. In this view, you have three options: login by entering the data correctly, access the password recovery screen (by clicking on 'Forgot password?') or create a new account by clicking on the corresponding text.</value>
  </data>
  <data name="help5" xml:space="preserve">
    <value>Password Recovery Page</value>
  </data>
  <data name="help6" xml:space="preserve">
    <value>A field is displayed where you can enter the email address associated with the account. After submitting the form, the application sends an email with instructions on how to reset the password.</value>
  </data>
  <data name="help7" xml:space="preserve">
    <value>Registration Page </value>
  </data>
  <data name="help8" xml:space="preserve">
    <value>A form is displayed requesting information such as name, valid email address, password (at least six characters) and password confirmation. If there is no account associated with the email entered, the registration is completed and the user is redirected to the login screen to access with the new credentials.</value>
  </data>
  <data name="help9" xml:space="preserve">
    <value>Main Page: Public Works</value>
  </data>
  <data name="help10" xml:space="preserve">
    <value>Its content varies depending on whether the user is logged in or not:</value>
  </data>
  <data name="help11" xml:space="preserve">
    <value>For non-logged-in users, the main screen displays a list of public works and the option to upload a file of their own via a button at the bottom.</value>
  </data>
  <data name="help12" xml:space="preserve">
    <value>For logged-in users, they access a customized view where books are presented in different categories (New, Most Viewed and Public Works). The top header displays account information, with a profile icon to access settings and another to log out. An additional link to this help page is included in the header. Users can access a collection of public domain works in EPUB format. There is a navigation bar and buttons on the side to read own files or upload PDFs, the latter only available to users with author role.</value>
  </data>
  <data name="help13" xml:space="preserve">
    <value>Main Page: What's New</value>
  </data>
  <data name="help14" xml:space="preserve">
    <value>The latest books published by the community are listed and their details can be viewed by clicking on them. It has the same navigation and functionalities commented in Public Works.</value>
  </data>
  <data name="help15" xml:space="preserve">
    <value>Main Page: Most Viewed</value>
  </data>
  <data name="help16" xml:space="preserve">
    <value>Lists the most popular books of the community whose details can be viewed by clicking on them. It has the same navigation and functionalities as Public Works.</value>
  </data>
  <data name="help17" xml:space="preserve">
    <value>Book Upload Page</value>
  </data>
  <data name="help18" xml:space="preserve">
    <value>New screen accessible from the button on the main upload book page, it contains a form to complete the information associated with the book to be uploaded. This form includes fields such as the title, a description and the category to which it belongs. In addition, a button in the form of a paperclip is displayed that allows the user to select the PDF file from the user's device. Once the form is complete, by clicking the upload button, the book will be stored and will be pending review by an administrator before being made public to the rest of the users. </value>
  </data>
  <data name="help19" xml:space="preserve">
    <value>Book Details Page</value>
  </data>
  <data name="help20" xml:space="preserve">
    <value>Selecting a book from any listing redirects you to the book details screen. This section presents relevant information about the book, such as title, description, category, creation date, number of views and a list of comments made by other users. From this page, users can interact in different ways: add a comment by clicking on the black button with the comment icon, delete a comment of their own, add or delete the book from their favorites list by clicking on the heart icon, or proceed to read the book by clicking on the corresponding icon. Unregistered users will only have access to the read button; all other options will be hidden. </value>
  </data>
  <data name="help21" xml:space="preserve">
    <value>If you click on the comment button, a modal will appear in which you can enter the desired text. When you confirm, the comment will be added to the list of comments.</value>
  </data>
  <data name="help22" xml:space="preserve">
    <value>To delete a comment, click on it and a confirmation modal will open asking you to verify the action. </value>
  </data>
  <data name="help23" xml:space="preserve">
    <value>Reading Page</value>
  </data>
  <data name="help24" xml:space="preserve">
    <value>The content of the book is displayed in the central part of the screen and can be zoomed in or out using the buttons located at the top. </value>
  </data>
  <data name="help25" xml:space="preserve">
    <value>Profile Page</value>
  </data>
  <data name="help26" xml:space="preserve">
    <value>Accessible by clicking on the user icon in the header. This page displays the user's personal information, such as profile picture, name, e-mail address and date of account creation. In addition, a list of books marked as favorites is included, from where their details can be accessed. From this screen, the user can also access the profile settings by clicking on the icon in the upper right corner or request a change of role from basic user to author by clicking on their account status. </value>
  </data>
  <data name="help27" xml:space="preserve">
    <value>If a basic user selects the account status to change to author, a confirmation modal will be displayed. If accepted, the request will be pending review by an administrator. Users who are already authors or are in the process of verification will receive a message explaining why this action is not possible (Example: if you are an author it says that you cannot change the role since you are already an author). </value>
  </data>
  <data name="help28" xml:space="preserve">
    <value>Profile Settings Page</value>
  </data>
  <data name="help29" xml:space="preserve">
    <value>From this screen users can modify certain settings. These options are to change the name, the profile image or settings to change the theme of the application (light or dark), the font size (small, medium or large) and the language (English or Spanish). The changes made can be viewed in real time, but to apply them definitively it is necessary to press the Update button.</value>
  </data>
  <data name="help30" xml:space="preserve">
    <value>Categories Page</value>
  </data>
  <data name="help31" xml:space="preserve">
    <value>In the categories screen, administrators can view all the categories available on the platform. Each category is displayed with an associated trash can icon, which allows it to be deleted with a single click. In addition, a highlighted button is provided to add a new category, which opens a simple form where the name of the category to be created is entered. To facilitate navigation between the different pages of the administration panel, the interface includes a navigation bar located in a left side column. </value>
  </data>
  <data name="help32" xml:space="preserve">
    <value>In the case of clicking on the trash can icon of a category, a confirmation modal is displayed to ensure that the user wants to delete the category. This modal asks the user if he/she really wants to delete the selected category, with options to Confirm or Cancel the action. </value>
  </data>
  <data name="help33" xml:space="preserve">
    <value>In the case of pressing the button to add a new category, a modal is shown to enter the name of the new category. </value>
  </data>
  <data name="help34" xml:space="preserve">
    <value>Books Page</value>
  </data>
  <data name="help35" xml:space="preserve">
    <value>In the books screen, administrators can view the complete list of books that have been uploaded by the community. By clicking on any of these books, the details view can be accessed, just as a regular user would. In addition, administrators have the option to upload new PDF files, using a button with the respective icon, in the same way as an author. Another important functionality is the option to filter books by activating a toggle, which allows to show only those books that have been uploaded by authors and are pending approval. To manage these books, administrators can click on the three-dot icon next to each book, which will open a modal with several options. These options include editing, deleting or uploading the book, in case the book is marked as pending approval. </value>
  </data>
  <data name="help36" xml:space="preserve">
    <value>Clicking on the three dots icon displays a modal with various options available for the selected book. The options include:  </value>
  </data>
  <data name="help37" xml:space="preserve">
    <value>Upload: This option is only available for books that have been uploaded, but are still pending approval by an author. By selecting this option, the book is published and becomes visible to all users of the platform. </value>
  </data>
  <data name="help38" xml:space="preserve">
    <value>Edit: When selecting this option, the administrator is redirected to a specific screen to edit the details of the selected book. This allows modifying information such as the title, description, author, among others. </value>
  </data>
  <data name="help39" xml:space="preserve">
    <value>Delete: This option allows the book to be permanently deleted. When selecting Delete, the administrator receives a confirmation before proceeding with the deletion to avoid errors. </value>
  </data>
  <data name="help40" xml:space="preserve">
    <value>When the edit option is selected, the user accesses a screen with a pre-filled form with the data of the book to be modified. In this form, the most relevant fields can be updated, such as the title, description and category of the book. This functionality allows administrators to make quick and accurate adjustments to the information of the books on the platform. </value>
  </data>
  <data name="help41" xml:space="preserve">
    <value>Book Upload Page</value>
  </data>
  <data name="help42" xml:space="preserve">
    <value>New screen accessible from the button on the main upload book page contains a form to complete the information associated with the book to be uploaded. This form includes fields such as the title, a description and the category to which it belongs. In addition, a button in the form of a paperclip is displayed that allows the user to select the PDF file from the user's device. Once the form is complete, by clicking the upload button, the book will be stored and will be pending review by an administrator before being made public to the rest of the users. </value>
  </data>
  <data name="help43" xml:space="preserve">
    <value>Book Details Page</value>
  </data>
  <data name="help44" xml:space="preserve">
    <value>If a book is selected, you are redirected to the book details screen. This section presents relevant information about the book, such as title, description, category, creation date, number of views and a list of comments made by other users. From this page, users can interact in different ways: add a comment by clicking on the black button with the comment icon, delete a comment, add or delete the book from their favorites list by clicking on the heart icon, or proceed to read the book by clicking on the corresponding icon. </value>
  </data>
  <data name="help45" xml:space="preserve">
    <value>If you click on the comment button, a modal will appear in which you can enter the desired text. When you confirm, the comment will be added to the list of comments.</value>
  </data>
  <data name="help46" xml:space="preserve">
    <value>To delete a comment, click on it and a confirmation modal will open asking you to verify the action. </value>
  </data>
  <data name="help47" xml:space="preserve">
    <value>Users page</value>
  </data>
  <data name="help48" xml:space="preserve">
    <value>The users screen shows a list of the users registered in the application, excluding those with the administrator role, since the management of this type of users is done directly in Firebase, where the roles are assigned and deleted. From this screen, it is possible to delete users by simply clicking on the trash can icon associated to each one. In addition, you can filter the list by activating a toggle that allows you to display only those users who have requested to be authors and are pending approval. Selecting the three dots icon, available only for users pending approval, will open a modal that will allow the administrator to accept or deny the author role request of that user. </value>
  </data>
  <data name="help49" xml:space="preserve">
    <value>If the three-dot icon associated with pending users is clicked, a modal will be displayed that allows the administrator to accept or deny the change of that user's role to author. If the request is denied, the user's role will revert back to the standard user, and the user will be able to request to become an author again in the future if desired. </value>
  </data>
  <data name="help50" xml:space="preserve">
    <value>Profile Page</value>
  </data>
  <data name="help51" xml:space="preserve">
    <value>Accessible by clicking on the user icon in the header. This page displays the user's personal information, such as profile picture, name, e-mail address and date of account creation. In addition, a list of books marked as favorites is included, from where their details can be accessed. From this screen, the user can also access the profile settings by clicking on the icon in the upper right corner.</value>
  </data>
  <data name="searchTitle" xml:space="preserve">
    <value>Search title...</value>
  </data>
  <data name="searchName" xml:space="preserve">
    <value>Search Name...</value>
  </data>
  <data name="searchCategory" xml:space="preserve">
    <value>Search Category...</value>
  </data>
</root>